#!/usr/bin/perl
#Atlas v 0.1
#JATD 1/3/07
#***places to add code for new tissues are marked like this***

use CGI qw(:standard);
use CGI::Carp qw(warningsToBrowser fatalsToBrowser);
$ua = $ENV{REMOTE_ADDR};

print header;
print start_html('The Drosophila adult expression atlas');
print "<font  size=-1 face=\"Verdana, Arial, Helvetica, sans-serif\">";
print "<table border=0 width=\"100%\"><tr><td><a href=http://www.gla.ac.uk><img src=crest.gif align=LEFT alt=\"University of Glasgow\" Width=200></a></td>";
print  "<td><h1>Search the Drosophila adult expression atlas</h1></td>";
print "<td><a href=http://www.bbsrc.ac.uk><img src=bbsrcsmallcolour.gif align=RIGHT width=200 alt=\"Biotechnology & Biological Sciences Research Council\"></a></td></tr></table>";

print "<table width=\"100%\" border=\"1\" cellpadding=\"2\"><tr> ";
print "<td><div align=\"center\"><font color=\"#0033FF\" size=\"1\"><a href=\"atlas.cgi\">Home   &amp; Search</a></font></div></td>";
print " <td><div align=\"center\"><font color=\"#0033FF\" size=\"1\"><a href=\"about_atlas.html\">About & FAQ</a></font></div></td>";
print " <td><div align=\"center\"><font color=\"#0033FF\" size=\"1\"><a href=\"top50.html\">Top 50</a></font></div></td>";
print " <td><div align=\"center\"><font color=\"#0033FF\" size=\"1\"><a href=\"data.html\">Original data</a></font></div></td>";
print " <td><div align=\"center\"><font color=\"#0033FF\" size=\"1\"><a href=\"links.html\">Links</a></font></div></td></tr></table>";


#***places to add code for new tissues are marked like this***
print p,"<B>Latest news (24/2/07): See us in Philly: short talks on FlyAtlas 2-2:15 on Thursday, Friday, Saturday.</b>",br;
print p,"<B>Latest news (1/3/07): New tissue added: crop.</b>",br;

print p,"This dataset was generated by Venkat Chintapalli, Jing Wang & <a href=http://www.gla.ac.uk:443/ibls/staff/staff.php?who=PedeSP>Julian Dow</a> at the University of Glasgow with funding from the UK's BBSRC.",br;
print "It is intended to give you a quick answer to the question: <i>where is my gene of interest expressed/enriched in the adult fly?</i> ";
print "For each gene & tissue, you're given the mRNA SIGNAL (how abundant the mRNA is), the mRNA ENRICHMENT (compared to whole flies), and the Affymetrix PRESENT CALL (out of 4 arrays, how many times it was detectably expressed).",br;
print "New! You can also <a href=tissues.cgi>order your results by tissue, and by enrichment.</a><br>";
print "This is the batch search page. Enter one search term per line:<br>";
print	start_form,    "String to look for? ",textarea('name'),
    "e.g. vha, cell adhesion, receptor, aquaporin, adenylate, CG1147, pnt", p,
" If you don\'t get a hit for a particular gene, look it up ",
" in Flybase and try any synonyms (FBgn number, CG number, etc)",p;
 print submit,
    end_form,
    hr;
print end_html;

if (param()) {
   $search=param('name');
   print "<hr>";
#    print 
#	"Looking for ",$search,
#	p,
#	hr;
#print end_html;

if (length($search)>2) {
$s=uc($search);
@lines = split (/\n/,$s);
foreach (@lines) {
chop;
   print "Looking for: $_<p>\n";
   $s=$_;
#read array data
open(INFILE,"all.txt") || die "Cant get database";
$n=0;
while (<INFILE>) {
   $n++;
   chop;
   ($oligo,
   $brain_fly_t,$brainMean,$brainSEM,$brainCall,$brainRatio,
   $head_fly_t,$headMean,$headSEM,$headCall,$headRatio,
   $crop_fly_t,$cropMean,$cropSEM,$cropCall,$cropRatio,
   $midgut_fly_t,$midgutMean,$midgutSEM,$midgutCall,$midgutRatio,
   $hindgut_fly_t,$hindgutMean,$hindgutSEM,$hindgutCall,$hindgutRatio,
   $tubule_fly_t,$tubuleMean,$tubuleSEM,$tubuleCall,$tubuleRatio,
   $ovary_fly_t,$ovaryMean,$ovarySEM,$ovaryCall,$ovaryRatio,
   $testis_fly_t,$testisMean,$testisSEM,$testisCall,$testisRatio,
   $acc_fly_t,$accMean,$accSEM,$accCall,$accRatio,
   $l_tub_fly_t,$l_tubMean,$l_tubSEM,$l_tubCall,$l_tubRatio,
   $l_fat_fly_t,$l_fatMean,$l_fatSEM,$l_fatCall,$l_fatRatio,
#***places to add code for new tissues are marked like this***

   $flyMean,$flySEM,$flyCall,$description)=split (/\t/,$_);
   $desc=uc($description);
   if ($desc =~ /$s/) {
      $m++;
      #look for names of gene
	     $fbgn="";
     if ($description =~ /(FBgn[0-9]+)/) {
       $fbgn=$1;
	   $href="http:\/\/flybase.bio.indiana.edu\/.bin\/fbidq.html?$fbgn";
	      }
	     $gen="";
     if ($description =~ /GEN\=([^ ]+)/) {
       $gen=$1;
       }
	  $go=""; 
     if ($description =~ /\((GO\:[^)]+)/) {
       $go=$1;
       }
	   if ($brainRatio>5) {
	      $brain_fly_t="<font color=\"#FF0000\">$brain_fly_t</font>";
		  }
	   if ($headRatio>5) {
	      $head_fly_t="<font color=\"#FF0000\">$head_fly_t</font>";
		  }
	   if ($cropRatio>5) {
	      $crop_fly_t="<font color=\"#FF0000\">$crop_fly_t</font>";
		  }
	   if ($midgutRatio>5) {
	      $midgut_fly_t="<font color=\"#FF0000\">$midgut_fly_t</font>";
		  }
	   if ($tubuleRatio>5) {
	      $tubule_fly_t="<font color=\"#FF0000\">$tubule_fly_t</font>";
		  }
	   if ($hindgutRatio>5) {
	      $hindgut_fly_t="<font color=\"#FF0000\">$hindgut_fly_t</font>";
		  }
	   if ($ovaryRatio>5) {
	      $ovary_fly_t="<font color=\"#FF0000\">$ovary_fly_t</font>";
		  }
	   if ($testisRatio>5) {
	      $testis_fly_t="<font color=\"#FF0000\">$testis_fly_t</font>";
		  }
	  if ($accRatio>5) {
	      $acc_fly_t="<font color=\"#FF0000\">$acc_fly_t</font>";
		  }
	  if ($l_tubRatio>5) {
	      $l_tub_fly_t="<font color=\"#FF0000\">$l_tub_fly_t</font>";
		  }
	  if ($l_fatRatio>5) {
	      $l_fat_fly_t="<font color=\"#FF0000\">$l_fat_fly_t</font>";
		  }
#***places to add code for new tissues are marked like this***

#parse description to get more stuff
$desc=$description;
$desc =~ s/\/\/[^\/]+\/\/\//, /g;
$desc =~ s/ [0-9]+ /, /g;
$desc =~ s/\/\/ inferred from sequence similarity/, /g;

		  
	  print "<B>$gen (<A href=$href target=NEW>$fbgn<\/a>) Affy <a href=probeset.cgi?name=$oligo target=NEW>$oligo<\/a> - $go</B><P>"; 
#	  print "$go<br>\n";
      print "<font size=1>$desc</font><br>";
      print "<font size=\"-1\" face=\"Verdana, Arial, Helvetica, sans-serif\"><table border=2><tr><td>Tissue</td><td>mRNA Signal</td><td>Present Call</td><td>Enrichment</td><td>Affy Call</td></tr>";
      printf ("<tr><td>Brain</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$brain_fly_t</td></tr>",$brainMean,$brainSEM,$brainCall,$brainRatio);
      printf ("<tr><td>Head</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$head_fly_t</td></tr>",$headMean,$headSEM,$headCall,$headRatio);
      printf ("<tr><td>Crop</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$midgut_fly_t</td></tr>",$cropMean,$cropSEM,$cropCall,$cropRatio);
      printf ("<tr><td>Midgut</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$midgut_fly_t</td></tr>",$midgutMean,$midgutSEM,$midgutCall,$midgutRatio);
      printf ("<tr><td>Tubule</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$tubule_fly_t</td></tr>",$tubuleMean,$tubuleSEM,$tubuleCall,$tubuleRatio);
      printf ("<tr><td>Hindgut</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$hindgut_fly_t</td></tr>",$hindgutMean,$hindgutSEM,$hindgutCall,$hindgutRatio);
      printf ("<tr><td>Ovary</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$ovary_fly_t</td></tr>",$ovaryMean,$ovarySEM,$ovaryCall,$ovaryRatio);
      printf ("<tr><td>Testis</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$testis_fly_t</td></tr>",$testisMean,$testisSEM,$testisCall,$testisRatio);
      printf ("<tr><td>Male accessory glands</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$acc_fly_t</td></tr>",$accMean,$accSEM,$accCall,$accRatio);
      printf ("<tr><td>Larval tubule</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$l_tub_fly_t</td></tr>",$l_tubMean,$l_tubSEM,$l_tubCall,$l_tubRatio);
      printf ("<tr><td>Larval fat body</td><td>%d \xb1 %d</td><td>%d of 4</td><td>%5.2f</td><td>$l_fat_fly_t</td></tr>",$l_fatMean,$l_fatSEM,$l_fatCall,$l_fatRatio);
#***places to add code for new tissues are marked like this***

      printf ("<tr><td>Whole fly</td><td>%d \xb1 %d</td><td>%d of 4</td><td> </td><td> </td></tr>",$flyMean,$flySEM,$flyCall);
      print "</font></table>",p;
      }
   }
print "Number of hits: $m from $n entries.<p>\n";
close INFILE;
}
} else {
print STDERR "search string too short.\n";
}
}

print end_html;